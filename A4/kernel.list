
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea061a3a 	b	18e8f0 <main>

Disassembly of section .text:

0018e8f0 <main>:
  18e8f0:	e3a0d902 	mov	sp, #32768	; 0x8000
  18e8f4:	eb000005 	bl	18e910 <EnableJTAG>
  18e8f8:	eb000027 	bl	18e99c <InitFrameBuffer>
  18e8fc:	eb000046 	bl	18ea1c <clearScreen>
  18e900:	eb000062 	bl	18ea90 <drawBG>
  18e904:	eb000074 	bl	18eadc <drawGround>

0018e908 <haltLoop$>:
  18e908:	eafffffe 	b	18e908 <haltLoop$>

0018e90c <end>:
  18e90c:	e8bd8030 	pop	{r4, r5, pc}

0018e910 <EnableJTAG>:
  18e910:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  18e914:	e59f0064 	ldr	r0, [pc, #100]	; 18e980 <dowaitloop+0xc>
  18e918:	e0211001 	eor	r1, r1, r1
  18e91c:	e5801000 	str	r1, [r0]
  18e920:	eb000012 	bl	18e970 <dowait>
  18e924:	e59f0058 	ldr	r0, [pc, #88]	; 18e984 <dowaitloop+0x10>
  18e928:	e59f1058 	ldr	r1, [pc, #88]	; 18e988 <dowaitloop+0x14>
  18e92c:	e5801000 	str	r1, [r0]
  18e930:	eb00000e 	bl	18e970 <dowait>
  18e934:	e0211001 	eor	r1, r1, r1
  18e938:	e5801000 	str	r1, [r0]
  18e93c:	e59f0048 	ldr	r0, [pc, #72]	; 18e98c <dowaitloop+0x18>
  18e940:	e5901000 	ldr	r1, [r0]
  18e944:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
  18e948:	e3811a02 	orr	r1, r1, #8192	; 0x2000
  18e94c:	e5801000 	str	r1, [r0]
  18e950:	e59f0038 	ldr	r0, [pc, #56]	; 18e990 <dowaitloop+0x1c>
  18e954:	e5901000 	ldr	r1, [r0]
  18e958:	e59f2034 	ldr	r2, [pc, #52]	; 18e994 <dowaitloop+0x20>
  18e95c:	e1c11002 	bic	r1, r1, r2
  18e960:	e59f2030 	ldr	r2, [pc, #48]	; 18e998 <dowaitloop+0x24>
  18e964:	e1811002 	orr	r1, r1, r2
  18e968:	e5801000 	str	r1, [r0]
  18e96c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0018e970 <dowait>:
  18e970:	e3a02f4b 	mov	r2, #300	; 0x12c

0018e974 <dowaitloop>:
  18e974:	e2522001 	subs	r2, r2, #1
  18e978:	1afffffd 	bne	18e974 <dowaitloop>
  18e97c:	e12fff1e 	bx	lr
  18e980:	3f200094 	.word	0x3f200094
  18e984:	3f200098 	.word	0x3f200098
  18e988:	0bc00010 	.word	0x0bc00010
  18e98c:	3f200000 	.word	0x3f200000
  18e990:	3f200008 	.word	0x3f200008
  18e994:	00e3ffc0 	.word	0x00e3ffc0
  18e998:	0061b6c0 	.word	0x0061b6c0

0018e99c <InitFrameBuffer>:
  18e99c:	e59f2068 	ldr	r2, [pc, #104]	; 18ea0c <pointerWaitLoop$+0x1c>
  18e9a0:	e59f3068 	ldr	r3, [pc, #104]	; 18ea10 <pointerWaitLoop$+0x20>

0018e9a4 <mBoxFullLoop$>:
  18e9a4:	e5920018 	ldr	r0, [r2, #24]
  18e9a8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
  18e9ac:	1afffffc 	bne	18e9a4 <mBoxFullLoop$>
  18e9b0:	e2830101 	add	r0, r3, #1073741824	; 0x40000000
  18e9b4:	e3800008 	orr	r0, r0, #8
  18e9b8:	e5820020 	str	r0, [r2, #32]

0018e9bc <mBoxEmptyLoop$>:
  18e9bc:	e5920018 	ldr	r0, [r2, #24]
  18e9c0:	e3100101 	tst	r0, #1073741824	; 0x40000000
  18e9c4:	1afffffc 	bne	18e9bc <mBoxEmptyLoop$>
  18e9c8:	e5920000 	ldr	r0, [r2]
  18e9cc:	e200100f 	and	r1, r0, #15
  18e9d0:	e3310008 	teq	r1, #8
  18e9d4:	1afffff8 	bne	18e9bc <mBoxEmptyLoop$>
  18e9d8:	e59f0030 	ldr	r0, [pc, #48]	; 18ea10 <pointerWaitLoop$+0x20>
  18e9dc:	e5901004 	ldr	r1, [r0, #4]
  18e9e0:	e3310102 	teq	r1, #-2147483648	; 0x80000000
  18e9e4:	0a000001 	beq	18e9f0 <pointerWaitLoop$>
  18e9e8:	13a00000 	movne	r0, #0
  18e9ec:	112fff1e 	bxne	lr

0018e9f0 <pointerWaitLoop$>:
  18e9f0:	e59f001c 	ldr	r0, [pc, #28]	; 18ea14 <pointerWaitLoop$+0x24>
  18e9f4:	e5900000 	ldr	r0, [r0]
  18e9f8:	e3300000 	teq	r0, #0
  18e9fc:	0afffffb 	beq	18e9f0 <pointerWaitLoop$>
  18ea00:	e59f3010 	ldr	r3, [pc, #16]	; 18ea18 <pointerWaitLoop$+0x28>
  18ea04:	e5830000 	str	r0, [r3]
  18ea08:	e12fff1e 	bx	lr
  18ea0c:	3f00b880 	.word	0x3f00b880
  18ea10:	00009080 	.word	0x00009080
  18ea14:	000090cc 	.word	0x000090cc
  18ea18:	000090e0 	.word	0x000090e0

0018ea1c <clearScreen>:
  18ea1c:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
  18ea20:	e3a04000 	mov	r4, #0
  18ea24:	e3a05000 	mov	r5, #0
  18ea28:	e3a06000 	mov	r6, #0
  18ea2c:	e59f7130 	ldr	r7, [pc, #304]	; 18eb64 <moveGroundInnerLoop+0x3c>
  18ea30:	e59f8130 	ldr	r8, [pc, #304]	; 18eb68 <moveGroundInnerLoop+0x40>

0018ea34 <Looping>:
  18ea34:	e1a00004 	mov	r0, r4
  18ea38:	e1a01005 	mov	r1, r5
  18ea3c:	e1a02006 	mov	r2, r6
  18ea40:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  18ea44:	eb000009 	bl	18ea70 <DrawPixel>
  18ea48:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  18ea4c:	e2844001 	add	r4, r4, #1
  18ea50:	e1540007 	cmp	r4, r7
  18ea54:	bafffff6 	blt	18ea34 <Looping>
  18ea58:	e3a04000 	mov	r4, #0
  18ea5c:	e2855001 	add	r5, r5, #1
  18ea60:	e1550008 	cmp	r5, r8
  18ea64:	bafffff2 	blt	18ea34 <Looping>
  18ea68:	e8bd5fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
  18ea6c:	e1a0f00e 	mov	pc, lr

0018ea70 <DrawPixel>:
  18ea70:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
  18ea74:	e0804501 	add	r4, r0, r1, lsl #10
  18ea78:	e1a04084 	lsl	r4, r4, #1
  18ea7c:	e59f00e8 	ldr	r0, [pc, #232]	; 18eb6c <moveGroundInnerLoop+0x44>
  18ea80:	e5900000 	ldr	r0, [r0]
  18ea84:	e18020b4 	strh	r2, [r0, r4]
  18ea88:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
  18ea8c:	e12fff1e 	bx	lr

0018ea90 <drawBG>:
  18ea90:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  18ea94:	e3a04000 	mov	r4, #0
  18ea98:	e3a05000 	mov	r5, #0
  18ea9c:	e59f60cc 	ldr	r6, [pc, #204]	; 18eb70 <moveGroundInnerLoop+0x48>
  18eaa0:	e3a07b01 	mov	r7, #1024	; 0x400
  18eaa4:	e3a08c03 	mov	r8, #768	; 0x300

0018eaa8 <drawBGLoop>:
  18eaa8:	e1a00004 	mov	r0, r4
  18eaac:	e1a01005 	mov	r1, r5
  18eab0:	e0d620b2 	ldrh	r2, [r6], #2
  18eab4:	ebffffed 	bl	18ea70 <DrawPixel>
  18eab8:	e2844001 	add	r4, r4, #1
  18eabc:	e1540007 	cmp	r4, r7
  18eac0:	bafffff8 	blt	18eaa8 <drawBGLoop>
  18eac4:	e3a04000 	mov	r4, #0
  18eac8:	e2855001 	add	r5, r5, #1
  18eacc:	e1550008 	cmp	r5, r8
  18ead0:	bafffff4 	blt	18eaa8 <drawBGLoop>
  18ead4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  18ead8:	e1a0f00e 	mov	pc, lr

0018eadc <drawGround>:
  18eadc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  18eae0:	e3a04000 	mov	r4, #0
  18eae4:	e59f5088 	ldr	r5, [pc, #136]	; 18eb74 <moveGroundInnerLoop+0x4c>
  18eae8:	e59f6088 	ldr	r6, [pc, #136]	; 18eb78 <moveGroundInnerLoop+0x50>
  18eaec:	e3a07b01 	mov	r7, #1024	; 0x400
  18eaf0:	e3a0800b 	mov	r8, #11

0018eaf4 <drawGroundLoop>:
  18eaf4:	e1a00004 	mov	r0, r4
  18eaf8:	e1a01005 	mov	r1, r5
  18eafc:	e0d620b2 	ldrh	r2, [r6], #2
  18eb00:	ebffffda 	bl	18ea70 <DrawPixel>
  18eb04:	e2844001 	add	r4, r4, #1
  18eb08:	e1540007 	cmp	r4, r7
  18eb0c:	bafffff8 	blt	18eaf4 <drawGroundLoop>
  18eb10:	e3a04000 	mov	r4, #0
  18eb14:	e2855001 	add	r5, r5, #1
  18eb18:	e1550008 	cmp	r5, r8
  18eb1c:	bafffff4 	blt	18eaf4 <drawGroundLoop>

0018eb20 <moveGroundLoop>:
  18eb20:	e1a00004 	mov	r0, r4
  18eb24:	e1a01005 	mov	r1, r5

0018eb28 <moveGroundInnerLoop>:
  18eb28:	e0d620b2 	ldrh	r2, [r6], #2
  18eb2c:	ebffffcf 	bl	18ea70 <DrawPixel>
  18eb30:	e2844001 	add	r4, r4, #1
  18eb34:	e1540007 	cmp	r4, r7
  18eb38:	baffffed 	blt	18eaf4 <drawGroundLoop>
  18eb3c:	e3a04000 	mov	r4, #0
  18eb40:	e2855001 	add	r5, r5, #1
  18eb44:	e1550008 	cmp	r5, r8
  18eb48:	baffffe9 	blt	18eaf4 <drawGroundLoop>
  18eb4c:	e2400001 	sub	r0, r0, #1
  18eb50:	e59f1024 	ldr	r1, [pc, #36]	; 18eb7c <moveGroundInnerLoop+0x54>
  18eb54:	e1500001 	cmp	r0, r1
  18eb58:	bafffff2 	blt	18eb28 <moveGroundInnerLoop>
  18eb5c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  18eb60:	e1a0f00e 	mov	pc, lr
  18eb64:	000003ff 	.word	0x000003ff
  18eb68:	000002ff 	.word	0x000002ff
  18eb6c:	000090e0 	.word	0x000090e0
  18eb70:	000090f0 	.word	0x000090f0
  18eb74:	000002c3 	.word	0x000002c3
  18eb78:	001890f0 	.word	0x001890f0
  18eb7c:	fffffc01 	.word	0xfffffc01

0018eb80 <InitUART>:
  18eb80:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  18eb84:	e59f017c 	ldr	r0, [pc, #380]	; 18ed08 <WaitForCycles+0x10>
  18eb88:	e3a01001 	mov	r1, #1
  18eb8c:	e5801000 	str	r1, [r0]
  18eb90:	e59f0174 	ldr	r0, [pc, #372]	; 18ed0c <WaitForCycles+0x14>
  18eb94:	e0211001 	eor	r1, r1, r1
  18eb98:	e5801000 	str	r1, [r0]
  18eb9c:	e59f016c 	ldr	r0, [pc, #364]	; 18ed10 <WaitForCycles+0x18>
  18eba0:	e0211001 	eor	r1, r1, r1
  18eba4:	e5801000 	str	r1, [r0]
  18eba8:	e59f0164 	ldr	r0, [pc, #356]	; 18ed14 <WaitForCycles+0x1c>
  18ebac:	e3a01003 	mov	r1, #3
  18ebb0:	e5801000 	str	r1, [r0]
  18ebb4:	e59f015c 	ldr	r0, [pc, #348]	; 18ed18 <WaitForCycles+0x20>
  18ebb8:	e0211001 	eor	r1, r1, r1
  18ebbc:	e5801000 	str	r1, [r0]
  18ebc0:	e59f0144 	ldr	r0, [pc, #324]	; 18ed0c <WaitForCycles+0x14>
  18ebc4:	e0211001 	eor	r1, r1, r1
  18ebc8:	e5801000 	str	r1, [r0]
  18ebcc:	e59f0148 	ldr	r0, [pc, #328]	; 18ed1c <WaitForCycles+0x24>
  18ebd0:	e3a010c6 	mov	r1, #198	; 0xc6
  18ebd4:	e5801000 	str	r1, [r0]
  18ebd8:	e59f0140 	ldr	r0, [pc, #320]	; 18ed20 <WaitForCycles+0x28>
  18ebdc:	e59f1140 	ldr	r1, [pc, #320]	; 18ed24 <WaitForCycles+0x2c>
  18ebe0:	e5801000 	str	r1, [r0]
  18ebe4:	e3a0000e 	mov	r0, #14
  18ebe8:	e3a01002 	mov	r1, #2
  18ebec:	eb000053 	bl	18ed40 <SetGpioFunction>
  18ebf0:	e3a0000f 	mov	r0, #15
  18ebf4:	e3a01002 	mov	r1, #2
  18ebf8:	eb000050 	bl	18ed40 <SetGpioFunction>
  18ebfc:	e59f0124 	ldr	r0, [pc, #292]	; 18ed28 <WaitForCycles+0x30>
  18ec00:	e0211001 	eor	r1, r1, r1
  18ec04:	e5801000 	str	r1, [r0]
  18ec08:	e3a00096 	mov	r0, #150	; 0x96
  18ec0c:	eb000039 	bl	18ecf8 <WaitForCycles>
  18ec10:	e59f0114 	ldr	r0, [pc, #276]	; 18ed2c <WaitForCycles+0x34>
  18ec14:	e3a01903 	mov	r1, #49152	; 0xc000
  18ec18:	e5801000 	str	r1, [r0]
  18ec1c:	e3a00096 	mov	r0, #150	; 0x96
  18ec20:	eb000034 	bl	18ecf8 <WaitForCycles>
  18ec24:	e59f0100 	ldr	r0, [pc, #256]	; 18ed2c <WaitForCycles+0x34>
  18ec28:	e0211001 	eor	r1, r1, r1
  18ec2c:	e5801000 	str	r1, [r0]
  18ec30:	e59f00d8 	ldr	r0, [pc, #216]	; 18ed10 <WaitForCycles+0x18>
  18ec34:	e3a01003 	mov	r1, #3
  18ec38:	e5801000 	str	r1, [r0]
  18ec3c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0018ec40 <PutCharUART>:
  18ec40:	e59f20e8 	ldr	r2, [pc, #232]	; 18ed30 <WaitForCycles+0x38>

0018ec44 <putWaitLoop$>:
  18ec44:	e5921000 	ldr	r1, [r2]
  18ec48:	e3110020 	tst	r1, #32
  18ec4c:	0afffffc 	beq	18ec44 <putWaitLoop$>
  18ec50:	e59f20dc 	ldr	r2, [pc, #220]	; 18ed34 <WaitForCycles+0x3c>
  18ec54:	e5820000 	str	r0, [r2]
  18ec58:	e1a0f00e 	mov	pc, lr

0018ec5c <GetCharUART>:
  18ec5c:	e59f20cc 	ldr	r2, [pc, #204]	; 18ed30 <WaitForCycles+0x38>

0018ec60 <getWaitLoop$>:
  18ec60:	e5921000 	ldr	r1, [r2]
  18ec64:	e3110001 	tst	r1, #1
  18ec68:	0afffffc 	beq	18ec60 <getWaitLoop$>
  18ec6c:	e59f20c0 	ldr	r2, [pc, #192]	; 18ed34 <WaitForCycles+0x3c>
  18ec70:	e5920000 	ldr	r0, [r2]
  18ec74:	e1a0f00e 	mov	pc, lr

0018ec78 <WriteStringUART>:
  18ec78:	e92d4070 	push	{r4, r5, r6, lr}
  18ec7c:	e1a04000 	mov	r4, r0
  18ec80:	e1a05001 	mov	r5, r1
  18ec84:	e3a06000 	mov	r6, #0

0018ec88 <writeLoop$>:
  18ec88:	e3550000 	cmp	r5, #0
  18ec8c:	da000004 	ble	18eca4 <writeLoopEnd$>
  18ec90:	e7d40006 	ldrb	r0, [r4, r6]
  18ec94:	ebffffe9 	bl	18ec40 <PutCharUART>
  18ec98:	e2866001 	add	r6, r6, #1
  18ec9c:	e2455001 	sub	r5, r5, #1
  18eca0:	eafffff8 	b	18ec88 <writeLoop$>

0018eca4 <writeLoopEnd$>:
  18eca4:	e8bd8070 	pop	{r4, r5, r6, pc}

0018eca8 <ReadLineUART>:
  18eca8:	e92d4070 	push	{r4, r5, r6, lr}
  18ecac:	e1a04000 	mov	r4, r0
  18ecb0:	e1a05001 	mov	r5, r1
  18ecb4:	e3a06000 	mov	r6, #0

0018ecb8 <readLoop$>:
  18ecb8:	e1360005 	teq	r6, r5
  18ecbc:	0a00000b 	beq	18ecf0 <readLoopEnd$>
  18ecc0:	ebffffe5 	bl	18ec5c <GetCharUART>
  18ecc4:	ebffffdd 	bl	18ec40 <PutCharUART>
  18ecc8:	e5c40000 	strb	r0, [r4]
  18eccc:	e2866001 	add	r6, r6, #1
  18ecd0:	e2844001 	add	r4, r4, #1
  18ecd4:	e330000d 	teq	r0, #13
  18ecd8:	1afffff6 	bne	18ecb8 <readLoop$>
  18ecdc:	e3a0000a 	mov	r0, #10
  18ece0:	ebffffd6 	bl	18ec40 <PutCharUART>
  18ece4:	e2444001 	sub	r4, r4, #1
  18ece8:	e3a00000 	mov	r0, #0
  18ecec:	e5c40000 	strb	r0, [r4]

0018ecf0 <readLoopEnd$>:
  18ecf0:	e2460001 	sub	r0, r6, #1
  18ecf4:	e8bd8070 	pop	{r4, r5, r6, pc}

0018ecf8 <WaitForCycles>:
  18ecf8:	e2400001 	sub	r0, r0, #1
  18ecfc:	e3500000 	cmp	r0, #0
  18ed00:	aafffffc 	bge	18ecf8 <WaitForCycles>
  18ed04:	e1a0f00e 	mov	pc, lr
  18ed08:	3f215004 	.word	0x3f215004
  18ed0c:	3f215044 	.word	0x3f215044
  18ed10:	3f215060 	.word	0x3f215060
  18ed14:	3f21504c 	.word	0x3f21504c
  18ed18:	3f215050 	.word	0x3f215050
  18ed1c:	3f215048 	.word	0x3f215048
  18ed20:	3f215068 	.word	0x3f215068
  18ed24:	0000010e 	.word	0x0000010e
  18ed28:	3f200094 	.word	0x3f200094
  18ed2c:	3f200098 	.word	0x3f200098
  18ed30:	3f215054 	.word	0x3f215054
  18ed34:	3f215040 	.word	0x3f215040

0018ed38 <GetGpioAddress>:
  18ed38:	e59f00cc 	ldr	r0, [pc, #204]	; 18ee0c <GetGpio+0x44>
  18ed3c:	e1a0f00e 	mov	pc, lr

0018ed40 <SetGpioFunction>:
  18ed40:	e3500035 	cmp	r0, #53	; 0x35
  18ed44:	93510007 	cmpls	r1, #7
  18ed48:	81a0f00e 	movhi	pc, lr
  18ed4c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  18ed50:	e1a02000 	mov	r2, r0
  18ed54:	ebfffff7 	bl	18ed38 <GetGpioAddress>

0018ed58 <functionLoop$>:
  18ed58:	e3520009 	cmp	r2, #9
  18ed5c:	8242200a 	subhi	r2, r2, #10
  18ed60:	82800004 	addhi	r0, r0, #4
  18ed64:	8afffffb 	bhi	18ed58 <functionLoop$>
  18ed68:	e0822082 	add	r2, r2, r2, lsl #1
  18ed6c:	e1a01211 	lsl	r1, r1, r2
  18ed70:	e3a03007 	mov	r3, #7
  18ed74:	e1a03213 	lsl	r3, r3, r2
  18ed78:	e5902000 	ldr	r2, [r0]
  18ed7c:	e1c22003 	bic	r2, r2, r3
  18ed80:	e1811002 	orr	r1, r1, r2
  18ed84:	e5801000 	str	r1, [r0]
  18ed88:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0018ed8c <SetGpio>:
  18ed8c:	e3500035 	cmp	r0, #53	; 0x35
  18ed90:	81a0f00e 	movhi	pc, lr
  18ed94:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  18ed98:	e1a02000 	mov	r2, r0
  18ed9c:	ebffffe5 	bl	18ed38 <GetGpioAddress>
  18eda0:	e1a032a2 	lsr	r3, r2, #5
  18eda4:	e1a03103 	lsl	r3, r3, #2
  18eda8:	e0800003 	add	r0, r0, r3
  18edac:	e202201f 	and	r2, r2, #31
  18edb0:	e3a03001 	mov	r3, #1
  18edb4:	e1a03213 	lsl	r3, r3, r2
  18edb8:	e3310000 	teq	r1, #0
  18edbc:	05803028 	streq	r3, [r0, #40]	; 0x28
  18edc0:	1580301c 	strne	r3, [r0, #28]
  18edc4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0018edc8 <GetGpio>:
  18edc8:	e3500035 	cmp	r0, #53	; 0x35
  18edcc:	81a0f00e 	movhi	pc, lr
  18edd0:	e92d4010 	push	{r4, lr}
  18edd4:	e1a04000 	mov	r4, r0
  18edd8:	ebffffd6 	bl	18ed38 <GetGpioAddress>
  18eddc:	e1a032a4 	lsr	r3, r4, #5
  18ede0:	e1a03103 	lsl	r3, r3, #2
  18ede4:	e0800003 	add	r0, r0, r3
  18ede8:	e204401f 	and	r4, r4, #31
  18edec:	e3a03001 	mov	r3, #1
  18edf0:	e1a03413 	lsl	r3, r3, r4
  18edf4:	e5904034 	ldr	r4, [r0, #52]	; 0x34
  18edf8:	e0044003 	and	r4, r4, r3
  18edfc:	e3340000 	teq	r4, #0
  18ee00:	03a00000 	moveq	r0, #0
  18ee04:	13a00001 	movne	r0, #1
  18ee08:	e8bd8010 	pop	{r4, pc}
  18ee0c:	3f200000 	.word	0x3f200000
